/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import '@stencil/state-tunnel';

import {
  RouterHistory,
} from './global/interfaces';

declare global {

  namespace StencilComponents {
    interface TestPage1 {
      'history': RouterHistory;
    }
  }

  interface HTMLTestPage1Element extends StencilComponents.TestPage1, HTMLStencilElement {}

  var HTMLTestPage1Element: {
    prototype: HTMLTestPage1Element;
    new (): HTMLTestPage1Element;
  };
  interface HTMLElementTagNameMap {
    'test-page-1': HTMLTestPage1Element;
  }
  interface ElementTagNameMap {
    'test-page-1': HTMLTestPage1Element;
  }
  namespace JSX {
    interface IntrinsicElements {
      'test-page-1': JSXElements.TestPage1Attributes;
    }
  }
  namespace JSXElements {
    export interface TestPage1Attributes extends HTMLAttributes {
      'history'?: RouterHistory;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface TestPage2 {
      'history': RouterHistory;
    }
  }

  interface HTMLTestPage2Element extends StencilComponents.TestPage2, HTMLStencilElement {}

  var HTMLTestPage2Element: {
    prototype: HTMLTestPage2Element;
    new (): HTMLTestPage2Element;
  };
  interface HTMLElementTagNameMap {
    'test-page-2': HTMLTestPage2Element;
  }
  interface ElementTagNameMap {
    'test-page-2': HTMLTestPage2Element;
  }
  namespace JSX {
    interface IntrinsicElements {
      'test-page-2': JSXElements.TestPage2Attributes;
    }
  }
  namespace JSXElements {
    export interface TestPage2Attributes extends HTMLAttributes {
      'history'?: RouterHistory;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface TestPage3 {
      'history': RouterHistory;
    }
  }

  interface HTMLTestPage3Element extends StencilComponents.TestPage3, HTMLStencilElement {}

  var HTMLTestPage3Element: {
    prototype: HTMLTestPage3Element;
    new (): HTMLTestPage3Element;
  };
  interface HTMLElementTagNameMap {
    'test-page-3': HTMLTestPage3Element;
  }
  interface ElementTagNameMap {
    'test-page-3': HTMLTestPage3Element;
  }
  namespace JSX {
    interface IntrinsicElements {
      'test-page-3': JSXElements.TestPage3Attributes;
    }
  }
  namespace JSXElements {
    export interface TestPage3Attributes extends HTMLAttributes {
      'history'?: RouterHistory;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface TestApp {

    }
  }

  interface HTMLTestAppElement extends StencilComponents.TestApp, HTMLStencilElement {}

  var HTMLTestAppElement: {
    prototype: HTMLTestAppElement;
    new (): HTMLTestAppElement;
  };
  interface HTMLElementTagNameMap {
    'test-app': HTMLTestAppElement;
  }
  interface ElementTagNameMap {
    'test-app': HTMLTestAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'test-app': JSXElements.TestAppAttributes;
    }
  }
  namespace JSXElements {
    export interface TestAppAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppRoute {
      'component': string;
      'componentProps': { [key: string]: any };
      'componentUpdated': (callback: () => void) => void;
      'history': RouterHistory;
      'url': string | string[];
    }
  }

  interface HTMLAppRouteElement extends StencilComponents.AppRoute, HTMLStencilElement {}

  var HTMLAppRouteElement: {
    prototype: HTMLAppRouteElement;
    new (): HTMLAppRouteElement;
  };
  interface HTMLElementTagNameMap {
    'app-route': HTMLAppRouteElement;
  }
  interface ElementTagNameMap {
    'app-route': HTMLAppRouteElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-route': JSXElements.AppRouteAttributes;
    }
  }
  namespace JSXElements {
    export interface AppRouteAttributes extends HTMLAttributes {
      'component'?: string;
      'componentProps'?: { [key: string]: any };
      'componentUpdated'?: (callback: () => void) => void;
      'history'?: RouterHistory;
      'url'?: string | string[];
    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppRouter {
      'root': string;
    }
  }

  interface HTMLAppRouterElement extends StencilComponents.AppRouter, HTMLStencilElement {}

  var HTMLAppRouterElement: {
    prototype: HTMLAppRouterElement;
    new (): HTMLAppRouterElement;
  };
  interface HTMLElementTagNameMap {
    'app-router': HTMLAppRouterElement;
  }
  interface ElementTagNameMap {
    'app-router': HTMLAppRouterElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-router': JSXElements.AppRouterAttributes;
    }
  }
  namespace JSXElements {
    export interface AppRouterAttributes extends HTMLAttributes {
      'root'?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;